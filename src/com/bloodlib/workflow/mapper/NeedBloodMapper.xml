<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bloodlib.workflow.mapper.NeedBloodMapper">
  <resultMap id="BaseResultMap" type="com.bloodlib.workflow.model.NeedBlood">
    <id column="Need_Blood_Id" jdbcType="BIGINT" property="needBloodId" />
    <result column="User_Id" jdbcType="BIGINT" property="userId" />
    <result column="Blood_Type_Id" jdbcType="BIGINT" property="bloodTypeId" />
    <result column="Quantity" jdbcType="DECIMAL" property="quantity" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="Area_Id" jdbcType="BIGINT" property="areaId" />
    <result column="IsReceived" jdbcType="INTEGER" property="isreceived" />
    <result column="Need_Blood_Person" jdbcType="VARCHAR" property="needBloodPerson" />
    <result column="Certificate_Type" jdbcType="INTEGER" property="certificateType" />
    <result column="Certificate_Code" jdbcType="VARCHAR" property="certificateCode" />
    <result column="Create_Date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="Hospital_Id" jdbcType="BIGINT" property="hospitalId" />
  </resultMap>
  <sql id="Base_Column_List">
    Need_Blood_Id, User_Id, Blood_Type_Id, Quantity, remark, Area_Id, IsReceived, Need_Blood_Person, 
    Certificate_Type, Certificate_Code, Create_Date, Hospital_Id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from need_blood
    where Need_Blood_Id = #{needBloodId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from need_blood
    where Need_Blood_Id = #{needBloodId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bloodlib.workflow.model.NeedBlood">
    insert into need_blood (Need_Blood_Id, User_Id, Blood_Type_Id, 
      Quantity, remark, Area_Id, 
      IsReceived, Need_Blood_Person, Certificate_Type, 
      Certificate_Code, Create_Date, Hospital_Id
      )
    values (#{needBloodId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{bloodTypeId,jdbcType=BIGINT}, 
      #{quantity,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{areaId,jdbcType=BIGINT}, 
      #{isreceived,jdbcType=INTEGER}, #{needBloodPerson,jdbcType=VARCHAR}, #{certificateType,jdbcType=INTEGER}, 
      #{certificateCode,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{hospitalId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bloodlib.workflow.model.NeedBlood">
    insert into need_blood
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="needBloodId != null">
        Need_Blood_Id,
      </if>
      <if test="userId != null">
        User_Id,
      </if>
      <if test="bloodTypeId != null">
        Blood_Type_Id,
      </if>
      <if test="quantity != null">
        Quantity,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="areaId != null">
        Area_Id,
      </if>
      <if test="isreceived != null">
        IsReceived,
      </if>
      <if test="needBloodPerson != null">
        Need_Blood_Person,
      </if>
      <if test="certificateType != null">
        Certificate_Type,
      </if>
      <if test="certificateCode != null">
        Certificate_Code,
      </if>
      <if test="createDate != null">
        Create_Date,
      </if>
      <if test="hospitalId != null">
        Hospital_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="needBloodId != null">
        #{needBloodId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="bloodTypeId != null">
        #{bloodTypeId,jdbcType=BIGINT},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=BIGINT},
      </if>
      <if test="isreceived != null">
        #{isreceived,jdbcType=INTEGER},
      </if>
      <if test="needBloodPerson != null">
        #{needBloodPerson,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null">
        #{certificateType,jdbcType=INTEGER},
      </if>
      <if test="certificateCode != null">
        #{certificateCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hospitalId != null">
        #{hospitalId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bloodlib.workflow.model.NeedBlood">
    update need_blood
    <set>
      <if test="userId != null">
        User_Id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="bloodTypeId != null">
        Blood_Type_Id = #{bloodTypeId,jdbcType=BIGINT},
      </if>
      <if test="quantity != null">
        Quantity = #{quantity,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        Area_Id = #{areaId,jdbcType=BIGINT},
      </if>
      <if test="isreceived != null">
        IsReceived = #{isreceived,jdbcType=INTEGER},
      </if>
      <if test="needBloodPerson != null">
        Need_Blood_Person = #{needBloodPerson,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null">
        Certificate_Type = #{certificateType,jdbcType=INTEGER},
      </if>
      <if test="certificateCode != null">
        Certificate_Code = #{certificateCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        Create_Date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hospitalId != null">
        Hospital_Id = #{hospitalId,jdbcType=BIGINT},
      </if>
    </set>
    where Need_Blood_Id = #{needBloodId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bloodlib.workflow.model.NeedBlood">
    update need_blood
    set User_Id = #{userId,jdbcType=BIGINT},
      Blood_Type_Id = #{bloodTypeId,jdbcType=BIGINT},
      Quantity = #{quantity,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      Area_Id = #{areaId,jdbcType=BIGINT},
      IsReceived = #{isreceived,jdbcType=INTEGER},
      Need_Blood_Person = #{needBloodPerson,jdbcType=VARCHAR},
      Certificate_Type = #{certificateType,jdbcType=INTEGER},
      Certificate_Code = #{certificateCode,jdbcType=VARCHAR},
      Create_Date = #{createDate,jdbcType=TIMESTAMP},
      Hospital_Id = #{hospitalId,jdbcType=BIGINT}
    where Need_Blood_Id = #{needBloodId,jdbcType=BIGINT}
  </update>
  <select id="getNeedBloodListForUser" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	select 
	<include refid="Base_Column_List" />
	from need_blood where Blood_Type_Id=#{0} and Area_Id=#{1}
  </select>
  <select id="getNeedBloodList" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from need_blood
  </select>
  <update id="updateIsReceived" parameterType="java.lang.Long">
  	update need_blood set IsReceived= 1 where Need_Blood_Id = #{needBloodId,jdbcType=BIGINT}
  </update>
</mapper>